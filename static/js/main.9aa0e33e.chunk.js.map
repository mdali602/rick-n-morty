{"version":3,"sources":["utils/constants.js","utils/fetch.js","components/RenderSelect.js","utils/factory.js","components/FilterBar.js","components/Information.js","components/CardItem.js","components/DisplayMessage.js","components/App.js","serviceWorker.js","index.js"],"names":["API","endPoint","colors","queryParams","params","Object","keys","filter","key","map","k","encodeURIComponent","join","endPointURL","options","url","indexOf","fetch","useStyles","makeStyles","theme","formControl","margin","spacing","color","minWidth","selectEmpty","marginTop","RenderSelect","props","classes","name","label","value","onChange","optionId","optionValue","optionLabel","FormControl","className","InputLabel","id","Select","labelId","option","MenuItem","defaultProps","createDropdownFilterData","dropDownFilters","root","backgroundColor","padding","justifyContent","grow","flexGrow","toolbar","display","flexWrap","flexContainer","search","position","borderRadius","shape","fade","palette","common","white","marginRight","marginLeft","width","breakpoints","up","searchIcon","height","pointerEvents","alignItems","clearIcon","cursor","top","right","inputRoot","inputInput","paddingLeft","transition","transitions","create","proot","droot","input","flex","iconButton","divider","resetBtn","FilterBar","getCharacters","sortCharacters","useState","ASC","setASC","setName","setQueryParams","handleSearch","prevParams","nextParams","clearSearch","handleChange","event","target","AppBar","Toolbar","style","Paper","component","InputBase","placeholder","inputProps","e","onKeyDown","persist","console","log","IconButton","type","aria-label","onClick","Divider","orientation","dropDown","FormControlLabel","control","Switch","checked","prev","Button","variant","fontSize","borderBottom","removeBorder","leftAlign","textAlign","textTransform","rightAlign","Information","character","property","info","styles","Typography","Grid","container","xs","obj","path","paths","split","current","i","length","undefined","deepFind","access","media","paddingTop","avatar","red","header","infoHeader","bottom","background","mainInfo","subInfo","properties","CardItem","dateTime","Card","CardMedia","image","title","created","moment","fromNow","CardContent","fontWeight","lineHeight","letterSpacing","DisplayMessage","message","App","characters","setCharacters","loading","setLoading","a","data","json","results","useEffect","isAsc","prevChars","sort","b","Boolean","window","location","hostname","match","ReactDOM","hydrate","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9aa0e33e.chunk.js","sourcesContent":["export const API = `https://rickandmortyapi.com/api/`;\n\nexport const endPoint = {\n  character: 'character',\n};\n\nexport const genders = [\n  { id: 'none', label: 'None', value: '' },\n  { id: 'male', label: 'Male', value: 'male' },\n  { id: 'female', label: 'Female', value: 'female' },\n  { id: 'genderless', label: 'Genderless', value: 'genderless' },\n  { id: 'unknown', label: 'Unknown', value: 'unknown' },\n];\n\nexport const species = [\n  { label: 'None', value: '' },\n  { label: 'Human', value: 'Human' },\n  { label: 'Alien', value: 'Alien' },\n  { label: 'Humanoid', value: 'Humanoid' },\n  { label: 'Mytholog', value: 'Mytholog' },\n  { label: 'Unknown', value: 'unknown' },\n];\n\nexport const statuses = [\n  { label: 'None', value: '' },\n  { label: 'Alive', value: 'alive' },\n  { label: 'Dead', value: 'dead' },\n  { label: 'Unknown', value: 'unknown' },\n];\n\nexport const colors = {\n  primary: '#272f3c',\n  secondary: '#ff9800',\n  white: '#fff',\n  balck: '#000',\n  grey: '#323131',\n};\n","import { API } from './constants';\n\nfunction queryParams(params) {\n  return Object.keys(params)\n    .filter((key) => params[key])\n    .map(\n      (k) =>\n        `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`,\n    )\n    .join('&');\n}\n\nexport default function (endPointURL, options = {}) {\n  let url = API + endPointURL;\n  if (options.queryParams) {\n    // console.log('TCL: options.queryParams', options.queryParams);\n    url +=\n      (url.indexOf('?') === -1 ? '?' : '&') +\n      queryParams(options.queryParams);\n    delete options.queryParams;\n  }\n\n  return fetch(url, options);\n}\n\n// export default fetch2;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  makeStyles,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    color: 'red',\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\nconst RenderSelect = (props) => {\n  const classes = useStyles();\n  const {\n    name,\n    label,\n    value,\n    onChange,\n    options,\n    optionId,\n    optionValue,\n    optionLabel,\n  } = props;\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id={label}>{label}</InputLabel>\n        <Select\n          name={name}\n          value={value}\n          onChange={onChange}\n          labelId={label}\n          id={`${label}-select`}\n        >\n          {options.map((option) => {\n            if (typeof option === 'object') {\n              return (\n                <MenuItem\n                  key={option[optionId]}\n                  value={option[optionValue]}\n                >\n                  {option[optionLabel]}\n                </MenuItem>\n              );\n            }\n            return (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nRenderSelect.propTypes = {\n  name: PropTypes.shape({}).isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  options: PropTypes.arrayOf().isRequired,\n  onChange: PropTypes.func,\n  optionId: PropTypes.string,\n  optionValue: PropTypes.string,\n  optionLabel: PropTypes.string,\n};\n\nRenderSelect.defaultProps = {\n  value: '',\n  onChange: () => {},\n  optionId: '',\n  optionValue: '',\n  optionLabel: '',\n};\n\nexport default RenderSelect;\n","import moment from 'moment';\nimport { genders, species, statuses } from './constants';\n\nexport const isExist = (value) => {\n  return !(value === undefined || value === null || value === '');\n};\n\nexport const deepFind = (obj, path) => {\n  const paths = (path || '').split('.');\n  let current = obj;\n\n  for (let i = 0; i < paths.length; i += 1) {\n    if (isExist(current[paths[i]])) {\n      current = current[paths[i]];\n    } else {\n      return '';\n    }\n  }\n  return current;\n};\n\nexport const timeStamp = (dateTime) => moment(dateTime).fromNow();\n\n// import SearchContext from './SearchContext';\nconst createDropdownFilterData = (\n  name,\n  label,\n  options,\n  optionId,\n  optionLabel,\n  optionValue,\n) => ({\n  name,\n  label,\n  options,\n  optionId,\n  optionLabel,\n  optionValue,\n});\n\nexport const dropDownFilters = [\n  createDropdownFilterData(\n    'species',\n    'Species',\n    species,\n    'label',\n    'label',\n    'value',\n  ),\n  createDropdownFilterData(\n    'gender',\n    'Gender',\n    genders,\n    'id',\n    'label',\n    'value',\n  ),\n  createDropdownFilterData(\n    'status',\n    'Status',\n    statuses,\n    'label',\n    'label',\n    'value',\n  ),\n];\n","// import debounce from 'lodash/debounce';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, FormControlLabel, Switch } from '@material-ui/core';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\n\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport RenderSelect from './RenderSelect';\nimport { colors } from '../utils/constants';\nimport { dropDownFilters } from '../utils/factory';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: colors.secondary,\n    // height: 100,\n    padding: '20px 0',\n    justifyContent: 'center',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  flexContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.25),\n    // color: fade(theme.palette.common.black, 0.15),\n    color: 'rgba(0,0,0,0.87)',\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  clearIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    // pointerEvents: 'none',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    top: 0,\n    right: 4,\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  proot: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 468,\n    height: 60,\n    margin: '0 10px',\n  },\n  droot: {\n    padding: '2px 4px',\n    margin: '0 10px',\n    height: 60,\n    display: 'flex',\n    alignItems: 'center',\n    // width: 200,\n    // padding: '0 10px',\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    width: 2,\n    margin: 4,\n  },\n  resetBtn: {\n    backgroundColor: colors.primary,\n    color: colors.white,\n    padding: '20px',\n  },\n}));\n\nfunction FilterBar({ getCharacters, sortCharacters }) {\n  const classes = useStyles();\n  const [ASC, setASC] = useState(true);\n  const [name, setName] = useState('');\n  const [queryParams, setQueryParams] = useState({});\n\n  const handleSearch = () => {\n    setQueryParams((prevParams) => {\n      const nextParams = {\n        ...prevParams,\n        name,\n      };\n      getCharacters(nextParams);\n      return nextParams;\n    });\n  };\n\n  const clearSearch = () => {\n    setName('');\n    setQueryParams((prevParams) => {\n      const nextParams = {\n        ...prevParams,\n        name: '',\n      };\n      getCharacters(nextParams);\n      return nextParams;\n    });\n  };\n\n  const resetFilter = () => {\n    setName('');\n    setASC(true);\n    setQueryParams({});\n    getCharacters();\n  };\n\n  const handleTextFieldKeyDown = (event) => {\n    event.persist();\n    switch (event.key) {\n      case 'Enter':\n        handleSearch();\n        return;\n      case 'Escape':\n        clearSearch();\n        return;\n      default:\n        console.log('handleTextFieldKeyDown -> default');\n    }\n  };\n\n  const handleChange = (event) => {\n    setQueryParams((prevParams) => {\n      const nextParams = {\n        ...prevParams,\n        [event.target.name]: event.target.value,\n      };\n      getCharacters(nextParams);\n      return nextParams;\n    });\n  };\n\n  const toggleSort = () => {\n    setASC((prev) => !prev);\n    sortCharacters(ASC);\n  };\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar className={classes.toolbar}>\n          <div style={{ padding: '10px 0' }}>\n            <Paper component=\"div\" className={classes.proot}>\n              <InputBase\n                className={classes.input}\n                placeholder=\"Search By Name...\"\n                inputProps={{ 'aria-label': 'search' }}\n                name=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                onKeyDown={handleTextFieldKeyDown}\n              />\n              {name && (\n                <IconButton\n                  type=\"button\"\n                  name=\"name\"\n                  className={classes.iconButton}\n                  aria-label=\"clear\"\n                  onClick={clearSearch}\n                >\n                  <ClearRoundedIcon />\n                </IconButton>\n              )}\n\n              <Divider\n                className={classes.divider}\n                orientation=\"vertical\"\n              />\n              <IconButton\n                type=\"button\"\n                name=\"name\"\n                className={classes.iconButton}\n                aria-label=\"search\"\n                onClick={handleSearch}\n              >\n                <SearchIcon />\n              </IconButton>\n            </Paper>\n          </div>\n          <div style={{ display: 'flex', padding: '10px 0' }}>\n            {dropDownFilters.map((dropDown) => (\n              <Paper\n                key={dropDown.name}\n                component=\"div\"\n                className={classes.droot}\n                // style={{ margin: '20px' }}\n              >\n                <RenderSelect\n                  name={dropDown.name}\n                  label={dropDown.label}\n                  value={queryParams[dropDown.name]}\n                  onChange={handleChange}\n                  options={dropDown.options}\n                  optionId={dropDown.optionId}\n                  optionLabel={dropDown.optionLabel}\n                  optionValue={dropDown.optionValue}\n                />\n              </Paper>\n            ))}\n          </div>\n          <div>\n            <FormControlLabel\n              control={\n                // eslint-disable-next-line react/jsx-wrap-multilines\n                <Switch\n                  checked={ASC}\n                  onChange={toggleSort}\n                  color={colors.primary}\n                />\n              }\n              label={ASC ? 'Ascending' : 'Descending'}\n            />\n\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              className={classes.resetBtn}\n              onClick={resetFilter}\n            >\n              Reset Filter\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nFilterBar.propTypes = {\n  getCharacters: PropTypes.func.isRequired,\n  sortCharacters: PropTypes.func.isRequired,\n};\n\nexport default FilterBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, Grid, Typography } from '@material-ui/core';\nimport { colors } from '../utils/constants';\nimport { deepFind } from '../utils/factory';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    padding: '10px 0',\n    fontSize: '12px',\n    alignItems: 'center',\n    borderBottom: `1px solid ${colors.balck}`,\n    justifyContent: 'space-between',\n    '&:last-child': {\n      borderBottom: '1px solid transparent',\n    },\n  },\n  removeBorder: {\n    borderBottom: '1px solid transparent',\n  },\n  leftAlign: {\n    color: colors.white,\n    textAlign: 'left',\n    textTransform: 'uppercase',\n  },\n  rightAlign: {\n    color: colors.secondary,\n    textAlign: 'right',\n  },\n}));\n\nconst Information = ({ character, property }) => {\n  const classes = useStyles();\n  const info = (styles, value) => {\n    return (\n      <Typography\n        variant=\"body2\"\n        color=\"textSecondary\"\n        component=\"p\"\n        className={styles}\n      >\n        {value}\n      </Typography>\n    );\n  };\n  return (\n    <Grid container xs={12} className={classes.root}>\n      <Grid xs={6}>{info(classes.leftAlign, property.label)}</Grid>\n      <Grid xs={6}>\n        <Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n          component=\"p\"\n          className={classes.rightAlign}\n        >\n          {info(\n            classes.rightAlign,\n            deepFind(character, property.access),\n          )}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nInformation.propTypes = {\n  character: PropTypes.objectOf().isRequired,\n  property: PropTypes.objectOf().isRequired,\n};\n\nexport default Information;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n// import clsx from 'clsx';\nimport { Grid, Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { red } from '@material-ui/core/colors';\nimport Information from './Information';\nimport { colors } from '../utils/constants';\nimport { timeStamp } from '../utils/factory';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: 345,\n    margin: '10px',\n    textAlign: 'center',\n    backgroundColor: colors.grey,\n  },\n  media: {\n    height: 100,\n    paddingTop: '56.25%', // 16:9\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  header: {\n    position: 'relative',\n  },\n  infoHeader: {\n    position: 'absolute',\n    width: 'inherit',\n    bottom: '0',\n    padding: '12px',\n    background: 'rgba(0, 0, 0, 0.75)',\n    color: colors.white,\n  },\n  mainInfo: {\n    color: colors.white,\n    fontSize: '22px',\n    textAlign: 'left',\n  },\n  subInfo: {\n    color: colors.white,\n    fontSize: '16px',\n    textAlign: 'left',\n  },\n}));\n\nconst properties = [\n  { id: 'status', label: 'Status', access: 'status' },\n  { id: 'species', label: 'Species', access: 'species' },\n  { id: 'gender', label: 'Gender', access: 'gender' },\n  { id: 'origin', label: 'Origin', access: 'origin.name' },\n  { id: 'location', label: 'Last Location', access: 'location.name' },\n];\n\nfunction CardItem({ character }) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <Grid container xs={12} className={classes.header}>\n        <Grid xs={12}>\n          <CardMedia\n            className={classes.media}\n            image={character.image}\n            title=\"Paella dish\"\n          />\n        </Grid>\n        <Grid xs={12} className={classes.infoHeader}>\n          <Typography\n            variant=\"body2\"\n            component=\"p\"\n            className={classes.mainInfo}\n          >\n            {character.name}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            component=\"p\"\n            className={classes.subInfo}\n          >\n            id: {character.id} - created{' '}\n            {timeStamp(character.created)}\n          </Typography>\n        </Grid>\n      </Grid>\n      <CardContent>\n        {properties.map((property) => (\n          <Information\n            key={property.id}\n            character={character}\n            property={property}\n          />\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n\nCardItem.propTypes = {\n  character: PropTypes.objectOf().isRequired,\n};\nexport default CardItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: 715,\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '2rem',\n    fontWeight: 500,\n    color: '#fff',\n    lineHeight: 1.5,\n    letterSpacing: '0.00938em',\n  },\n}));\n\nconst DisplayMessage = ({ message }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div>{message}</div>\n    </div>\n  );\n};\n\nDisplayMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default DisplayMessage;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { endPoint, colors } from '../utils/constants';\nimport fetch from '../utils/fetch';\nimport FilterBar from './FilterBar';\nimport CardItem from './CardItem';\nimport DisplayMessage from './DisplayMessage';\n// import {moduleName} from './constants'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: colors.primary,\n  },\n  flexContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [characters, setCharacters] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getCharacters = async (queryParams = {}) => {\n    try {\n      setLoading(true);\n      const data = await fetch(endPoint.character, { queryParams });\n      const { results = [] } = await data.json();\n      setCharacters(results);\n      setLoading(false);\n    } catch (err) {\n      console.log('getCharacters -> err', err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getCharacters();\n  }, []);\n\n  const sortCharacters = (isAsc) =>\n    setCharacters((prevChars) => [\n      ...prevChars.sort((a, b) =>\n        !isAsc ? a.id - b.id : b.id - a.id,\n      ),\n    ]);\n\n  return (\n    <div className={classes.root}>\n      <FilterBar\n        getCharacters={getCharacters}\n        sortCharacters={sortCharacters}\n      />\n      {loading && <DisplayMessage message=\"Loading...\" />}\n      {!loading && characters.length === 0 && (\n        <DisplayMessage message=\"No records to display\" />\n      )}\n      <div className={classes.flexContainer}>\n        {characters.map((character) => (\n          <CardItem key={character.id} character={character} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable*/\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\n        'Error during service worker registration:',\n        error,\n      );\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null &&\n          contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n/* ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); */\nReactDOM.hydrate(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}